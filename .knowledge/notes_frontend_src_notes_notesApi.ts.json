{"is_source_file": true, "format": "TypeScript", "description": "This file provides API functions for managing notes in a note-taking application. It includes functions to fetch, create, update, and delete notes, currently implemented with localStorage as a dummy backend.", "external_files": ["./types"], "external_methods": [], "published": ["fetchNotes", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "export async function fetchNotes(): Promise<Note[]> { fetchNotes", "description": "Retrieves all notes from localStorage, simulating a fetch from a backend API.", "parameters": [], "return_type": "Promise<Note[]>", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(data: Partial<Note>): Promise<Note> { createNote", "description": "Creates a new note with provided data, assigns a unique ID, timestamps it, updates local storage, and returns the created note.", "parameters": ["data: Partial<Note>"], "return_type": "Promise<Note>", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote(updatedNote: Note): Promise<Note> { updateNote", "description": "Updates an existing note by ID, refreshes timestamp, updates local storage, and returns the updated note.", "parameters": ["updatedNote: Note"], "return_type": "Promise<Note>", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: string): Promise<void> { deleteNote", "description": "Deletes a note by ID from local storage.", "parameters": ["id: string"], "return_type": "Promise<void>", "scope": "", "scopeKind": ""}], "calls": ["localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify", "Date.now()", "new Date().toISOString()"], "search-terms": ["notesApi.ts", "fetchNotes", "localStorage", "Note", "createNote", "updateNote", "deleteNote"], "state": 2, "file_id": 16, "knowledge_revision": 54, "git_revision": "", "revision_history": [{"34": ""}, {"54": ""}], "ctags": [{"_type": "tag", "name": "_API_BASE", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^const _API_BASE = import.meta.env.VITE_BACKEND_URL || \"http:\\/\\/localhost:8000\\/api\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^export async function createNote(data: Partial<Note>): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^export async function deleteNote(id: string): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fetchNotes", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^export async function fetchNotes(): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^  const next = notes.filter(n => n.id !== id);$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^  const next = notes.map(n => (n.id === updatedNote.id ? { ...updatedNote, updated_at: new Date(/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^  const note: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^  const notes = await fetchNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^  const notes = await fetchNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^  const notes = await fetchNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^  const notes = localStorage.getItem(\"notes\");$/", "language": "TypeScript", "kind": "constant", "scope": "fetchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^export async function updateNote(updatedNote: Note): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/note-keeper-16388-16415/notes_frontend/src/notes/notesApi.ts", "pattern": "/^  const updated = [note, ...notes];$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}], "hash": "88501e144fa500b74789fb8743264e11", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/notes/notesApi.ts"}